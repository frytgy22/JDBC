/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-01-24 11:37:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.lebedeva.Check;
import org.lebedeva.model.CdDisk;
import org.lebedeva.model.Archive;

public final class edit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/template/head.jsp", Long.valueOf(1579860707000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <title>CD archive</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"//cdn.muicss.com/mui-latest/extra/mui-colors.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/static/css/style.css\">\n");
      out.write("    <script src=\"//cdn.muicss.com/mui-latest/extra/mui-combined.min.js\"></script>\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-2.1.0.js\"></script>\n");
      out.write("    <title>Home</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<header class=\"mui-appbar mui--z1\">\n");
      out.write("    <div class=\"mui-container\">\n");
      out.write("        <table>\n");
      out.write("            <tr class=\"mui--appbar-height\">\n");
      out.write("                <td class=\"mui--text-title\">CD.io</td>\n");
      out.write("                <td class=\"mui--text-right\">\n");
      out.write("                    <ul class=\"mui-list--inline mui--text-body2\">\n");
      out.write("                        <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/\">Home</a></li>\n");
      out.write("                        <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/index\">CD archive</a></li>\n");
      out.write("                        <li><a href=\"https://github.com/frytgy22/javahw/tree/master/sessionJSP\"><i class=\"fa fa-github\"\n");
      out.write("                             aria-hidden=\"true\"></i>Github</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("    </div>\n");
      out.write("</header>");
      out.write('\n');
      out.write('\n');

    if (session.getAttribute("Archive") != null && Check.checkParameter(request.getParameter("id")) &&
            Check.checkParameter(request.getParameter("name")) && Check.checkParameter(request.getParameter("singer"))) {

        Archive archive = (Archive) session.getAttribute("Archive");

        try {
            Integer id = Integer.parseInt(request.getParameter("id").trim());
            CdDisk cdDisk = Check.getCdDisk(archive, id);

            if (cdDisk != null) {
                archive.getCdDiskList().remove(cdDisk);
                archive.getCdDiskList().add(new CdDisk(id, request.getParameter("name").trim(), request.getParameter("singer").trim()));

                response.sendRedirect(request.getContextPath() + "/index");
            } else {
                response.getWriter().write("<p class='top'>Nothing to edit.</p>");
            }

        } catch (NumberFormatException e) {
            e.printStackTrace();
            response.getWriter().write("<p class='top'>Wrong data.</p>");
        }
    } else {
        response.getWriter().write("<p class='top'>Wrong data: empty field.</p>");
    }

      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
